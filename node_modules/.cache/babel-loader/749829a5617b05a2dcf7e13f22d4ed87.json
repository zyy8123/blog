{"remainingRequest":"D:\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js!D:\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\blog-vue\\blog\\src\\views\\tag\\Tag.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\blog-vue\\blog\\src\\views\\tag\\Tag.vue","mtime":1656730233000},{"path":"D:\\blog-vue\\blog\\babel.config.js","mtime":1656730233000},{"path":"D:\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmxpc3RUYWdzKCk7CiAgfSwKCiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFnTGlzdDogW10sCiAgICAgIGNvdW50OiAwCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgbGlzdFRhZ3MoKSB7CiAgICAgIHRoaXMuYXhpb3MuZ2V0KCIvYXBpL3RhZ3MiKS50aGVuKCh7CiAgICAgICAgZGF0YQogICAgICB9KSA9PiB7CiAgICAgICAgdGhpcy50YWdMaXN0ID0gZGF0YS5kYXRhLnJlY29yZExpc3Q7CiAgICAgICAgdGhpcy5jb3VudCA9IGRhdGEuZGF0YS5jb3VudDsKICAgICAgfSk7CiAgICB9CgogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvdmVyKCkgewogICAgICB2YXIgY292ZXIgPSAiIjsKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYmxvZ0luZm8ucGFnZUxpc3QuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICBpZiAoaXRlbS5wYWdlTGFiZWwgPT0gInRhZyIpIHsKICAgICAgICAgIGNvdmVyID0gaXRlbS5wYWdlQ292ZXI7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuICJiYWNrZ3JvdW5kOiB1cmwoIiArIGNvdmVyICsgIikgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdCI7CiAgICB9CgogIH0KfTs="},{"version":3,"mappings":"AAwBA;EACAA;IACA;EACA,CAHA;;EAIAC;IACA;MACAC,WADA;MAEAC;IAFA;EAIA,CATA;EAUAC;IACAC;MACA;QAAAJ;MAAA;QACA;QACA;MACA,CAHA;IAIA;;EANA,CAVA;EAkBAK;IACAC;MACA;MACA;QACA;UACAA;QACA;MACA,CAJA;MAKA;IACA;;EATA;AAlBA","names":["created","data","tagList","count","methods","listTags","computed","cover"],"sourceRoot":"src/views/tag","sources":["Tag.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- banner -->\n    <div class=\"banner\" :style=\"cover\">\n      <h1 class=\"banner-title\">标签</h1>\n    </div>\n    <!-- 标签列表 -->\n    <v-card class=\"blog-container\">\n      <div class=\"tag-cloud-title\">标签 - {{ count }}</div>\n      <div class=\"tag-cloud\">\n        <router-link\n          :style=\"{ 'font-size': Math.floor(Math.random() * 10) + 18 + 'px' }\"\n          v-for=\"item of tagList\"\n          :key=\"item.id\"\n          :to=\"'/tags/' + item.id\"\n        >\n          {{ item.tagName }}\n        </router-link>\n      </div>\n    </v-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  created() {\n    this.listTags();\n  },\n  data: function() {\n    return {\n      tagList: [],\n      count: 0\n    };\n  },\n  methods: {\n    listTags() {\n      this.axios.get(\"/api/tags\").then(({ data }) => {\n        this.tagList = data.data.recordList;\n        this.count = data.data.count;\n      });\n    }\n  },\n  computed: {\n    cover() {\n      var cover = \"\";\n      this.$store.state.blogInfo.pageList.forEach(item => {\n        if (item.pageLabel == \"tag\") {\n          cover = item.pageCover;\n        }\n      });\n      return \"background: url(\" + cover + \") center center / cover no-repeat\";\n    }\n  }\n};\n</script>\n\n<style scoped>\n.tag-cloud-title {\n  line-height: 2;\n  font-size: 36px;\n  text-align: center;\n}\n@media (max-width: 759px) {\n  .tag-cloud-title {\n    font-size: 25px;\n  }\n}\n.tag-cloud {\n  text-align: center;\n}\n.tag-cloud a {\n  color: #616161;\n  display: inline-block;\n  text-decoration: none;\n  padding: 0 8px;\n  line-height: 2;\n  transition: all 0.3s;\n}\n.tag-cloud a:hover {\n  color: #03a9f4 !important;\n  transform: scale(1.1);\n}\n</style>\n"]}]}